set -euo pipefail

# ‚îÄ‚îÄ 1) –ù–∞—Ö–æ–¥–∏–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
if git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
  REPO_DIR="$(git rev-parse --show-toplevel)"
else
  CANDIDATE=$(ls -d /c/Users/*/AppData/Roaming/MetaQuotes/Terminal/*/MQL5/Experts/Aegis 2>/dev/null | head -n 1 || true)
  if [ -z "${CANDIDATE:-}" ]; then
    echo "‚ùå –ù–µ –Ω–∞—à—ë–ª —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π. –ó–∞–π–¥–∏ –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ Aegis –∏ –ø–æ–≤—Ç–æ—Ä–∏ –∑–∞–ø—É—Å–∫."
    exit 1
  fi
  REPO_DIR="$CANDIDATE"
fi
cd "$REPO_DIR"

# ‚îÄ‚îÄ 2) –ù–∞—Ö–æ–¥–∏–º —Ñ–∞–π–ª workflow
WF=""
for f in .github/workflows/*.yml .github/workflows/*.yaml; do
  [ -f "$f" ] && { WF="$f"; break; }
done
[ -z "$WF" ] && { echo "‚ùå –ù–µ –Ω–∞—à—ë–ª .github/workflows/*.yml"; exit 1; }

# ‚îÄ‚îÄ 3) –ï—Å–ª–∏ –±–ª–æ–∫ —É–∂–µ –µ—Å—Ç—å ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º, –∏–Ω–∞—á–µ –≤—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ 'steps:'
if grep -q 'AEGIS_AUTO_PUSH_MARKER' "$WF"; then
  echo "‚ÑπÔ∏è –ë–ª–æ–∫ –∞–≤—Ç–æ–ø—É—à–∞ —É–∂–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—é."
else
  TS=$(date +%Y%m%d_%H%M%S)
  cp "$WF" "${WF}.bak.$TS"

  # –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç —Å –æ—Ç—Å—Ç—É–ø–∞–º–∏ (6 –ø—Ä–æ–±–µ–ª–æ–≤ –ø–µ—Ä–µ–¥ - name)
  cat > __autopush_block.yml <<'YAML'
      - name: Push changes back to repo  # AEGIS_AUTO_PUSH_MARKER
        if: always()
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config user.name "aegis-bot"
          git config user.email "aegis-bot@users.noreply.github.com"
          git remote set-url origin https://${GH_TOKEN}@github.com/suhodolov333-stack/AegisAutopilot.git
          git fetch --all
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to push"
          else
            git commit -m "ci: auto-push from runner"
            git push origin HEAD:${GITHUB_REF#refs/heads/}
          fi
YAML

  awk -v frag="__autopush_block.yml" '
    { print }
    ins==0 && /^[[:space:]]*steps:[[:space:]]*$/ {
      while ((getline l < frag) > 0) print l
      close(frag); ins=1
    }' "$WF" > "$WF.new"

  mv "$WF.new" "$WF"
  rm -f __autopush_block.yml
  echo "‚úÖ –í—Å—Ç–∞–≤–∏–ª –±–ª–æ–∫ –∞–≤—Ç–æ–ø—É—à–∞ –≤ $WF"
fi

# ‚îÄ‚îÄ 4) –ö–æ–º–º–∏—Ç–∏–º –∏ –ø—É—à–∏–º
git add "$WF"
git commit -m "ci: add safe auto-push step (marker)" || echo "‚ÑπÔ∏è –ù–µ—á–µ–≥–æ –∫–æ–º–º–∏—Ç–∏—Ç—å"
git push origin main
echo "üéØ –ì–æ—Ç–æ–≤–æ. –ü—Ä–æ–≤–µ—Ä—å –ø—Ä–æ–≥–æ–Ω –≤ GitHub Actions."
